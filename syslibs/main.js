// Generated by CoffeeScript 1.12.6
var GLOBAL, getRootView, rootView;

GLOBAL = {};

rootView = void 0;

$((function(_this) {
  return function() {
    var bounds, frame, height, rootID, width;
    bounds = getBounds();
    width = bounds.size.width;
    height = bounds.size.height;
    frame = JSRectMake(0, 0, width, height);
    _this.rootView = new JSWindow(frame);
    GLOBAL['rootView'] = _this.rootView;
    _this.rootView.setBackgroundColor(JSColor("white"));
    _this.rootView.setClipToBounds(true);
    _this.rootView.setBackgroundColor(JSColor("clearColor"));
    $("body").append(_this.rootView._div);
    rootView.viewDidAppear();
    rootID = _this.rootView._objectID;
    _this.applicationMain = new applicationMain(_this.rootView);
    _this.applicationMain.didFinishLaunching();
    $(window).resize(function() {
      var angle, i, len, o, ref, results;
      frame = getBounds();
      width = frame.size.width;
      height = frame.size.height;
      $("#" + rootID).width(width);
      $("#" + rootID).height(height);
      angle = Math.abs(window.orientation);
      if (typeof _this.applicationMain.didBrowserResize === "function") {
        _this.applicationMain.didBrowserResize();
      }
      if (isAndroid() === true) {
        if (typeof _this.applicationMain.didBrowserRotate === "function") {
          _this.applicationMain.didBrowserRotate(angle);
        }
      }
      ref = _this.rootView._objlist;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        o = ref[i];
        if (typeof o.didBrowserResize === "function") {
          o.didBrowserResize();
        }
        if (isAndroid() === true) {
          if (typeof o.didBrowserRotate === "function") {
            results.push(o.didBrowserRotate(angle));
          } else {
            results.push(void 0);
          }
        } else {
          results.push(void 0);
        }
      }
      return results;
    });
    if (isAndroid() === false) {
      $(window).bind('orientationchange', function() {
        var angle, i, len, o, ref, results;
        angle = Math.abs(window.orientation);
        if (typeof _this.applicationMain.didBrowserRotate === "function") {
          _this.applicationMain.didBrowserRotate(angle);
        }
        ref = _this.rootView._objlist;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          o = ref[i];
          if (typeof o.didBrowserRotate === "function") {
            results.push(o.didBrowserRotate(angle));
          } else {
            results.push(void 0);
          }
        }
        return results;
      });
    }
    return window.cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;
  };
})(this));

getRootView = (function(_this) {
  return function() {
    return _this.rootView;
  };
})(this);

//# sourceMappingURL=main.js.map
